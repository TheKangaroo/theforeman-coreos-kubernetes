#cloud-config
<%#
kind: snippet
name: standalone_cloudconfig
oses:
- CoreOS
%>
      coreos:
        fleet:
          metadata: "role=kube-standalone"
        etcd:
          peers: 127.0.0.1:7001
          addr: 127.0.0.1:4001
          peer-addr: <%= @host.ip %>:7001
        units:
          - name: etcd.service
            command: start
          - name: fleet.service
            command: start
          - name: etcd-key-for-flannel.service
            command: start
            content: |
              [Unit]
              After=network-online.target
              Requires=network-online.target
              After=etcd.service
              Requires=etcd.service
              Description=flannel is an etcd backed overlay network for containers
              [Service]
              Type=notify
              ExecStart=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"<%= @host.params['overlay_network'] %>", "Backend": {"Type": "vxlan"}}'
          - name: flannel.service
            command: start
            content: |
              [Unit]
              After=network-online.target
              Wants=network-online.target
              After=etcd-key-for-flannel.service
              Wants=etcd-key-for-flannel.service
              Description=flannel is an etcd backed overlay network for containers
              [Service]
              Type=notify
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/flanneld
              ExecStartPre=/usr/bin/chmod +x /opt/bin/flanneld
              ExecStart=/opt/bin/flanneld -etcd-endpoints="127.0.0.1:4001"
              Restart=on-failure
              RestartSec=10
          - name: docker.service
            command: start
            content: |
              [Unit]
              After=add-flannel-host-ip.service
              Requires=add-flannel-host-ip.service
              Description=Docker Application Container Engine
              Documentation=http://docs.docker.io
              [Service]
              EnvironmentFile=/run/flannel/subnet.env
              ExecStartPre=/bin/mount --make-rprivate /
              ExecStartPre=/usr/bin/echo ${FLANNEL_SUBNET}
              ExecStart=/bin/bash -c "/usr/bin/docker -d --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU} -s=overlay -H fd://"
              [Install]
              WantedBy=multi-user.target
         - name: kube-apiserver.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes API Server
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=flannel.service etcd.service
              Requires=flannel.service etcd.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/hyperkube
              ExecStartPre=/usr/bin/chmod +x /opt/bin/hyperkube
              ExecStart=/opt/bin/hyperkube apiserver \
              --address=0.0.0.0 \
              --port=8080 \
              --portal_net=<%= @host.params['overlay_network'] %> \
              --etcd_servers="127.0.0.1:4001" \
              --logtostderr=true
              Restart=always
              RestartSec=10
          - name: kube-controller-manager.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Controller Manager
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=kube-apiserver.service
              Requires=kube-apiserver.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/hyperkube
              ExecStartPre=/usr/bin/chmod +x /opt/bin/hyperkube controller-manager
              ExecStartPre=/usr/bin/curl 127.0.0.1:8080
              ExecStart=/opt/bin/kube-controller-manager --master=127.0.0.1:8080 --logtostderr=true
              Restart=always
              RestartSec=10
          - name: kube-scheduler.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Scheduler
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=kube-apiserver.service
              Requires=kube-apiserver.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/hyperkube
              ExecStartPre=/usr/bin/chmod +x /opt/bin/hyperkube scheduler
              ExecStart=/opt/bin/kube-scheduler --master=127.0.0.1:8080
              Restart=always
              RestartSec=10
          - name: kube-register.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Register
              Documentation=https://github.com/kelseyhightower/kube-register
              After=kube-apiserver.service
              Requires=kube-apiserver.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/kube-register
              ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-register
              ExecStart=/opt/bin/kube-register \
              -metadata=role=kube-standalone \
              -fleet-endpoint=127.0.0.1:4001 \
              -api-endpoint=http://127.0.0.1:8080
          - name: kube-proxy.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Proxy
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=flannel.service
              Requires=flannel.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/hyperkube
              ExecStartPre=/usr/bin/chmod +x /opt/bin/hyperkube proxy
              ExecStartPre=/usr/bin/curl 127.0.0.1:8080
              ExecStart=/opt/bin/kube-proxy \
              --etcd_servers=127.0.0.1:4001 \
              --master=127.0.0.1:8080 \
              --logtostderr=true
              Restart=always
              RestartSec=10
          - name: kubelet.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Kubelet
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=flannel.service
              Requires=flannel.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/hyperkube
              ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
              ExecStartPre=/usr/bin/curl 127.0.0.1:8080
              ExecStart=/opt/bin/hyperkube kubelet \
              --address=0.0.0.0 \
              --port=10250 \
              --hostname_override=<%= @host.name %> \
              --etcd_servers=127.0.0.1:4001 \
              --logtostderr=true \
              --api_servers=127.0.0.1:8080 \
              Restart=always
              RestartSec=10
<% if @host.params['ssh_authorized_keys'] -%>
      ssh_authorized_keys:
  <% @host.params['ssh_authorized_keys'].split(',').map(&:strip).each do |ssh_key| -%>
      - "<%= ssh_key %>"
  <% end -%>
<% else -%>
      users:
        - name: core
          passwd: <%= root_pass %>
<% end -%>
