#cloud-config
<%#
kind: snippet
name: minion_cloudconfig
oses:
- CoreOS
%>
      coreos:
        fleet:
          metadata: "role=kube-minion"
<% if @host.params['etcd_servers'] -%>
          etcd_servers: "<%= @host.params['etcd_servers'] %>"
<% end -%>
        units:
          - name: etcd.service
            mask: true
          - name: fleet.service
            command: start 
          - name: flannel.service
            command: start
            content: |
              [Unit]
              After=network-online.target
              Wants=network-online.target
              Description=flannel is an etcd backed overlay network for containers
              [Service]
              Type=notify
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/flanneld
              ExecStartPre=/usr/bin/chmod +x /opt/bin/flanneld
              ExecStart=/opt/bin/flanneld -etcd-endpoints="<%= @host.params['etcd_servers'] %>"
          - name: add-flannel-host-ip.service
            command: start
            content: |
              [Unit]
              After=flannel.service
              Wants=flannel.service
              Description=Adds the Flannel host ip to the env variables to use them for the docker bridge
              [Service]
              Type=oneshot
              EnvironmentFile=/run/flannel/subnet.env
              ExecStart=/usr/bin/bash -c "echo FLANNEL_IP=${FLANNEL_SUBNET} | cut -d/ -f1 >> /run/flannel/subnet.env"
          - name: docker.service
            command: start
            content: |
              [Unit]
              After=add-flannel-host-ip.service
              Requires=add-flannel-host-ip.service
              Description=Docker Application Container Engine
              Documentation=http://docs.docker.io
              [Service]
              EnvironmentFile=/run/flannel/subnet.env
              ExecStartPre=/bin/mount --make-rprivate /
              ExecStartPre=/usr/bin/echo ${FLANNEL_SUBNET}
              ExecStart=/bin/bash -c "/usr/bin/docker -d --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU} -s=overlay -H fd:// --dns=${FLANNEL_IP}"
              [Install]
              WantedBy=multi-user.target
          - name: kube-proxy.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Proxy
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=flannel.service
              Requires=flannel.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/kube-proxy
              ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy
              ExecStart=/opt/bin/kube-proxy \
              --etcd_servers="<%= @host.params['etcd_servers'] %>" \
              --master=<%= @host.params['kubernetes_servers'] %> \
              --logtostderr=true
              Restart=always
              RestartSec=10
          - name: kubelet.service
            command: start
            content: |
              [Unit]
              Description=Kubernetes Kubelet
              Documentation=https://github.com/GoogleCloudPlatform/kubernetes
              After=flannel.service
              Requires=flannel.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/kubelet
              ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
              ExecStart=/opt/bin/kubelet \
              --address=0.0.0.0 \
              --port=10250 \
              --hostname_override=<%= @host.ip %> \
              --etcd_servers=<%= @host.params['etcd_servers'] %> \
              --logtostderr=true \
              --api_servers=<%= @host.params['kubernetes_servers'] %> \
              Restart=always
              RestartSec=10
          - name: skydns.service
            command: start
            content: |
              [Unit]
              Description=SkyDNS Service
              Documentation=https://github.com/skynetservices/skydns
              After=docker.service
              Requires=docker.service
              [Service]
              ExecStartPre=-/usr/bin/mkdir -p /opt/bin
              ExecStartPre=/usr/bin/wget -N -P /opt/bin <%= @host.params['kubernetes-binary-server'] -%>/skydns
              ExecStartPre=/usr/bin/chmod +x /opt/bin/skydns
              ExecStart=/opt/bin/skydns \
              -discover=true \
              -kubernetes=true \
              -machines=<%= @host.params['etcd_servers'] %> \
              -master=<%= @host.params['kubernetes_servers'] %> \
              -logtostderr=true
              Restart=always
              RestartSec=10
<% if @host.params['ssh_authorized_keys'] -%>
      ssh_authorized_keys:
  <% @host.params['ssh_authorized_keys'].split(',').map(&:strip).each do |ssh_key| -%>
      - "<%= ssh_key %>"
  <% end -%>
<% else -%>
      users:
        - name: core
          passwd: <%= root_pass %>
<% end -%>

